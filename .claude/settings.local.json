{
  "permissions": {
    "allow": [
      "Bash(tree:*)",
      "Read(//mnt/c/Users/oo/Desktop/**)",
      "Bash(python:*)",
      "Bash(python3:*)",
      "Bash(conda activate:*)",
      "Bash(pip3 install:*)",
      "Read(//usr/bin/**)",
      "Read(//mnt/c/**)",
      "Bash(python.exe --version:*)",
      "Bash(python.exe:*)",
      "Bash(pip.exe install:*)",
      "Bash(PYTHONIOENCODING=utf-8 python.exe:*)",
      "Bash(cat:*)",
      "Bash(PYTHONPATH=/mnt/c/Users/oo/Desktop/moon-dev-ai-agents python.exe:*)",
      "Bash(tee:*)",
      "Bash(if [ -f backtest_results_final.txt ])",
      "Bash(else echo \"Results file not found yet\")",
      "Bash(fi)",
      "Bash(if [ -f src/data/polymarket/logs/data_collector.log ])",
      "Bash(then cat src/data/polymarket/logs/data_collector.log)",
      "Bash(else echo \"Log file not found\")",
      "Bash(xargs -I {} bash -c 'echo \"\"\"\"=== {} ===\"\"\"\" && wc -l {}')",
      "Bash(curl -s \"https://clob.polymarket.com/book?token_id=21742633143463906290569050155826241533067272736897614950488156847949938836455\")",
      "Bash(curl -s \"https://clob.polymarket.com/book?token_id=53135072462907880191400140706440867753044989936304433583131786753949599718775\")",
      "Bash(curl:*)",
      "WebSearch",
      "WebFetch(domain:github.com)",
      "Bash(awk:*)",
      "Bash(xargs kill:*)",
      "Bash(if [ -f check_progress.py ])",
      "Bash(then python.exe check_progress.py)",
      "Bash(else echo \"check_progress.py not found\")",
      "Bash(xargs:*)",
      "Bash(pip.exe list:*)",
      "Bash(for file in base_model.py claude_model.py deepseek_model.py gemini_model.py groq_model.py ollama_model.py openai_model.py xai_model.py)",
      "Bash(do)",
      "Bash(done)",
      "Bash(for:*)",
      "Bash(export PYTHONIOENCODING=utf-8)",
      "Bash(timeout 60 python.exe:*)",
      "Bash(timeout 120 python.exe:*)",
      "Bash(timeout 180 python.exe:*)",
      "Bash(if [ -f market_snapshots.csv ])",
      "Bash(then wc -l market_snapshots.csv)",
      "Bash(else echo \"No data file created yet\")",
      "Bash(if [ -f src/data/polymarket/training_data/market_snapshots.csv ])",
      "Bash(else echo \"No data yet\")",
      "Bash(export PYTHONPATH=/mnt/c/Users/oo/Desktop/moon-dev-ai-agents:*)",
      "Bash(find:*)",
      "Bash(PYTHONIOENCODING=utf-8 timeout 60 python.exe:*)",
      "Bash(then wc -l src/data/polymarket/training_data/market_snapshots.csv)",
      "Bash(else echo \"File not found\")",
      "Bash(then tail -20 src/data/polymarket/logs/data_collector.log)",
      "Bash(else echo \"Log not found\")",
      "Bash(if [ -f polymarket_scanner.log ])",
      "Bash(then cat polymarket_scanner.log)",
      "Bash(else echo \"Scanner log not found or empty\")",
      "Bash(if [ -f src/data/polymarket/meta_learning/calibration.json ])",
      "Bash(then cat src/data/polymarket/meta_learning/calibration.json)",
      "Bash(if [ -f src/data/polymarket/positions/open_positions.csv ])",
      "Bash(then echo \"=== OPEN POSITIONS ===\")",
      "Bash(else echo \"No open positions file\")",
      "Bash(if [ -f src/data/polymarket/positions/closed_positions.csv ])",
      "Bash(then echo \"=== CLOSED POSITIONS ===\")",
      "Bash(else echo \"No closed positions file\")",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nAdd Polymarket scanner and monitoring tools\n\n- Created polymarket_scanner.py: Lightweight scanner for periodic opportunity detection\n- Created polymarket_dashboard.py: System status dashboard\n- Created view_polymarket.bat: Windows batch file to monitor all 3 components\n- Created POLYMARKET_STATUS_REPORT.md: Comprehensive system status documentation\n- Created POLYMARKET_SCANNER_GUIDE.md: Scanner usage documentation\n- Added POLYMARKET_SCAN_INTERVAL_MINUTES config parameter\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git config:*)",
      "Bash(chmod:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nAdd Polymarket scanner and VM deployment tools\n\n- Created polymarket_scanner.py: Lightweight scanner for periodic opportunity detection\n- Created polymarket_dashboard.py: System status dashboard  \n- Created view_polymarket.bat: Windows batch file to monitor all 3 components\n- Created POLYMARKET_STATUS_REPORT.md: Comprehensive system status documentation\n- Created POLYMARKET_SCANNER_GUIDE.md: Scanner usage documentation\n- Created setup_vm.sh: One-command Vultr VM setup script with systemd services\n- Created VM_SETUP_GUIDE.md: Complete VM deployment documentation\n- Added POLYMARKET_SCAN_INTERVAL_MINUTES config parameter\n- Configured daily email reports to 00@kpi-ai.com\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push:*)",
      "Bash(sshpass -p 'A4i$QDgSQ3f]Y9gS' ssh -o StrictHostKeyChecking=no root@155.138.237.127 \"sudo tee /etc/systemd/system/polymarket-collector.service > /dev/null <<''EOF''\n[Unit]\nDescription=Polymarket Data Collector\nAfter=network.target\n\n[Service]\nType=simple\nUser=root\nWorkingDirectory=/root/moon-dev-ai-agents\nEnvironment=\"\"PYTHONIOENCODING=utf-8\"\"\nEnvironment=\"\"PATH=/usr/local/bin:/usr/bin:/bin\"\"\nExecStart=/usr/bin/python3 /root/moon-dev-ai-agents/src/agents/polymarket_data_collector.py\nRestart=always\nRestartSec=30\nStandardOutput=append:/root/moon-dev-ai-agents/logs/collector.log\nStandardError=append:/root/moon-dev-ai-agents/logs/collector_error.log\n\n[Install]\nWantedBy=multi-user.target\nEOF\")",
      "Bash(sshpass -p 'A4i$QDgSQ3f]Y9gS' ssh -o StrictHostKeyChecking=no root@155.138.237.127 \"sudo tee /etc/systemd/system/polymarket-scanner.service > /dev/null <<''EOF''\n[Unit]\nDescription=Polymarket Scanner\nAfter=network.target polymarket-collector.service\n\n[Service]\nType=simple\nUser=root\nWorkingDirectory=/root/moon-dev-ai-agents\nEnvironment=\"\"PYTHONIOENCODING=utf-8\"\"\nEnvironment=\"\"PATH=/usr/local/bin:/usr/bin:/bin\"\"\nExecStart=/usr/bin/python3 /root/moon-dev-ai-agents/src/agents/polymarket_scanner.py\nRestart=always\nRestartSec=30\nStandardOutput=append:/root/moon-dev-ai-agents/logs/scanner.log\nStandardError=append:/root/moon-dev-ai-agents/logs/scanner_error.log\n\n[Install]\nWantedBy=multi-user.target\nEOF\")",
      "Bash(sshpass -p 'A4i$QDgSQ3f]Y9gS' ssh -o StrictHostKeyChecking=no root@155.138.237.127 \"mkdir -p /root/moon-dev-ai-agents/logs\")",
      "Bash(sshpass -p 'A4i$QDgSQ3f]Y9gS' ssh -o StrictHostKeyChecking=no root@155.138.237.127 \"chmod +x /root/moon-dev-ai-agents/send_daily_status.sh\")",
      "Bash(sshpass -p 'A4i$QDgSQ3f]Y9gS' ssh -o StrictHostKeyChecking=no root@155.138.237.127 \"(crontab -l 2>/dev/null; echo ''0 8 * * * /root/moon-dev-ai-agents/send_daily_status.sh'') | crontab -\")",
      "Bash(sshpass -p 'A4i$QDgSQ3f]Y9gS' ssh -o StrictHostKeyChecking=no root@155.138.237.127 \"sudo systemctl daemon-reload && sudo systemctl enable polymarket-collector polymarket-scanner && sudo systemctl start polymarket-collector polymarket-scanner\")",
      "Bash(sshpass -p 'A4i$QDgSQ3f]Y9gS' ssh -o StrictHostKeyChecking=no root@155.138.237.127 \"sudo systemctl status polymarket-collector --no-pager\")",
      "Bash(sshpass -p 'A4i$QDgSQ3f]Y9gS' ssh -o StrictHostKeyChecking=no root@155.138.237.127 \"sudo systemctl status polymarket-scanner --no-pager\")",
      "Bash(sshpass -p 'A4i$QDgSQ3f]Y9gS' ssh -o StrictHostKeyChecking=no root@155.138.237.127 \"sleep 3 && tail -20 /root/moon-dev-ai-agents/logs/collector.log 2>/dev/null || echo ''No logs yet''\")",
      "Bash(scp:*)",
      "Bash(git commit:*)",
      "Bash(git checkout:*)"
    ],
    "deny": [],
    "ask": []
  }
}
