{
  "success": false,
  "return_code": 1,
  "stdout": "\ud83c\udf19 Moon Dev Backtest Progress: 2023-01-04 02:45:00, ADX: 27.57, MACD: 16.88 \u2728\n\ud83c\udf19 Moon Dev Backtest Progress: 2023-01-05 03:45:00, ADX: 15.28, MACD: -3.87 \u2728\n\ud83c\udf19 Moon Dev Backtest Progress: 2023-01-06 04:45:00, ADX: 18.46, MACD: -5.03 \u2728\n\ud83c\udf19 Moon Dev Backtest Progress: 2023-01-07 05:45:00, ADX: 17.33, MACD: 1.59 \u2728\n\ud83c\udf19 Moon Dev Backtest Progress: 2023-01-08 06:45:00, ADX: 11.43, MACD: 2.38 \u2728\n\ud83c\udf19 Moon Dev Backtest Progress: 2023-01-09 07:45:00, ADX: 49.51, MACD: 17.37 \u2728\n\n",
  "stderr": "Traceback (most recent call last):\n  File \"/Users/md/Dropbox/dev/github/moon-dev-ai-agents-for-trading/src/data/rbi_pp/10_25_2025/backtests_optimized/T07_VigorConvergence_OPT_v4.py\", line 126, in <module>\n    stats = bt.run()\n  File \"/opt/anaconda3/envs/tflow/lib/python3.10/site-packages/backtesting/backtesting.py\", line 1170, in run\n    strategy.next()\n  File \"/Users/md/Dropbox/dev/github/moon-dev-ai-agents-for-trading/src/data/rbi_pp/10_25_2025/backtests_optimized/T07_VigorConvergence_OPT_v4.py\", line 97, in next\n    self.buy(sl=sl_price, tp=tp_price, size=size)\n  File \"/opt/anaconda3/envs/tflow/lib/python3.10/site-packages/backtesting/backtesting.py\", line 208, in buy\n    assert 0 < size < 1 or round(size) == size, \\\nAssertionError: size must be a positive fraction of equity, or a positive whole number of units\n\nERROR conda.cli.main_run:execute(124): `conda run python /Users/md/Dropbox/dev/github/moon-dev-ai-agents-for-trading/src/data/rbi_pp/10_25_2025/backtests_optimized/T07_VigorConvergence_OPT_v4.py` failed. (See above for error)\n",
  "execution_time": 1.051485,
  "timestamp": "2025-10-25T06:18:53.665245"
}